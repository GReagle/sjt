#!/bin/sh
[ "$DEBUG" ] && set -x

usage="usage: $(basename $0) [<sj options>]
$(basename $0) passes all options to sj, which see."

my_sj_dir="$SJ_DIR"
my_sj_server="$SJ_SERVER"

state=""
for arg; do
	if [ "$state" ]; then
		case "$state" in
			-s) my_sj_server="$arg";;
			-d) my_sj_dir="$arg";;
		esac
		state=""
	else
		case "$arg" in
			-s | -d ) state="$arg";;
		esac
	fi
done

[ "$my_sj_dir" ] || { echo Directory is needed via -d or SJ_DIR; exit 1; }
[ "$my_sj_server" ] || { echo Server is needed via -s or SJ_SERVER; exit 1; }
cd "$my_sj_dir" || { echo cannot cd to "$my_sj_dir"; exit 1; }
find "$my_sj_dir" -name status -exec rm -i '{}' ';'
export TLSC_NO_VERIFICATION=1
if [ "$DEBUG" ]; then
	env | fgrep 'SJ_'
	env | fgrep 'TLSC'
fi
tcpclient "$my_sj_server" 5223 tlsc sj -- "$@"
#tcpclient "$my_sj_server" 5222 sj "$@"

exit

echo '#!/bin/sh' > sj-sv/run
echo 'trap "kill 0; exit" EXIT' >> sj-sv/run
echo tcpclient "$my_sj_server" 5223 tlsc sj -- "$@" >> sj-sv/run
chmod u+x sj-sv/run
runsv sj-sv
