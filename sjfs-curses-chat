#!/usr/bin/env lua
require('strict')
local Px = require('posix')
local Cs = require('curses')

local typing_lines = 2  -- size of the input window

local tail_out = assert(io.popen('tail -f -n0 out', 'r'))
assert(tail_out:setvbuf('no'))
local tail_out_fd = Px.fileno(tail_out)

local stdin_fd = Px.fileno(io.stdin)

local fds = {
	[tail_out_fd] = { events = {IN=true} },
	[stdin_fd] = { events = {IN=true} }
}

local in_fifo = io.open('in', 'a')
assert(in_fifo:setvbuf('no'))

Cs.initscr()
Cs.cbreak(true)
Cs.echo(false)
local stdscr = Cs.stdscr()
stdscr:clear()
stdscr:refresh()

local s_lines, s_cols = stdscr:getmaxyx()
local display_win = Cs.newwin(s_lines - typing_lines, s_cols, 0, 0)
local typing_win = Cs.newwin(typing_lines, s_cols, s_lines - typing_lines, 0)

typing_win:keypad(true)
typing_win:scrollok(true)
typing_win:clear()
typing_winn:refresh()

display_win:scrollok(true)
display_win:clear()
display_win:refresh()

local line = ''
local s = ''
while true do
	local poll_result = Px.poll(fds, -1)
	if poll_result == 0 then  -- timeout
		break
	elseif poll_result == 1 then
		if  fds[tail_out_fd].revents.IN then
			display_win:addstr(tail_out:read('*l') .. '\n')
			display_win:refresh()
			-- Cs.beep()
		elseif  fds[stdin_fd].revents.IN then
			local c = typing_win:getch()
			if c < 256 then
				s = string.char(c)
				typing_win:addstr(s)
				typing_win:refresh()
			else
				s = ''
				--typing_win:addstr('What kind of character is this?')
				--typing_win:refresh()
			end
			if s == '\n' then
				if line == 'q' then
					break
				end
				in_fifo:write(line)
				line = ''
				typing_win:clear()
				typing_win:addstr('Type q then Enter to quit\n')
				typing_win:refresh()
			else
				line = line .. s
			end
		else
			typing_win:addstr('What kind of event is this?')
			typing_win:refresh()
		end
	else
		display_win:addstr('Polling finished!')
		display_win:refresh()
		break
	end
end

in_fifo:flush()
in_fifo:close()
--tail_out:flush()  -- makes the program freeze
--tail_out:close()  -- makes the program freeze
Cs.endwin()

os.exit(true)
